---
title: "ETC5242 Assignment 2"
author: "Jyovika Aswale, Siddhi Jadhav, Sia Chawla"
format: html
editor: visual
---

```{r}
#| label: setup
#| include: false
#| echo: false
#| message: false
#| warning: false

knitr::opts_chunk$set(fig.align = "center", fig.width = 8, fig.height = 5, dpi = 150)

library(tidyverse)
library(boot)
library(MASS)

set.seed(355435)  

B <- 5000
```

```{r}
pedestrian_df <- read.csv(here::here("data/pedestrians.csv"))
```

```{r, EDA_plots}
pedestrian_long <- pedestrian_df %>%
  mutate(obs = row_number()) %>%
  pivot_longer(-obs, names_to = "crossing", values_to = "count") %>%
  mutate(crossing = factor(crossing,
                           levels = c("southern_cross","flinders_street","qv_melbourne")))

# Box + jitter (great manager slide)
ggplot(pedestrian_long, aes(x = crossing, y = count, fill = crossing)) +
  geom_boxplot(outlier.shape = NA, alpha = 0.8) +
  geom_jitter(width = 0.15, alpha = 0.5, size = 1.6) +
  labs(title = "Pedestrian counts by crossing", x = NULL, y = "Count per interval") +
  theme_minimal() + theme(legend.position = "none")

# Density (shape of distributions)
ggplot(pedestrian_long, aes(x = count, fill = crossing)) +
  geom_density(alpha = 0.35) +
  facet_wrap(~ crossing, scales = "fixed") +
  labs(title = "Distribution (density) per crossing", x = "Count", y = "Density") +
  theme_minimal()

```

```{r, EDA_summaries}
desc <- pedestrian_long |>
  group_by(crossing) |>
  summarise(
    n     = n(),
    mean  = mean(count),
    median= median(count),
    sd    = sd(count),
    min   = min(count),
    max   = max(count),
    iqr   = IQR(count),
    .groups = "drop"
)

```

## task 1

```{r, MLE}
# Southern Cross
sc <- pedestrian_df$southern_cross
fit_sc_norm  <- fitdistr(sc, "normal")
fit_sc_logn  <- fitdistr(sc, "lognormal")
fit_sc_gamma <- fitdistr(sc, "gamma")   

sc_models <- tibble(
  crossing = "southern_cross",
  model    = c("normal","lognormal","gamma"),
  logLik   = c(logLik(fit_sc_norm)[1],  logLik(fit_sc_logn)[1],  logLik(fit_sc_gamma)[1]),
  AIC      = c(AIC(fit_sc_norm),        AIC(fit_sc_logn),        AIC(fit_sc_gamma)),

  mean_est = c(
    unname(fit_sc_norm$estimate["mean"]),
    exp(fit_sc_logn$estimate["meanlog"] + 0.5*fit_sc_logn$estimate["sdlog"]^2),
    unname(fit_sc_gamma$estimate["shape"] / fit_sc_gamma$estimate["rate"])),
  
  sd_est   = c(
    unname(fit_sc_norm$estimate["sd"]),
    sqrt((exp(fit_sc_logn$estimate["sdlog"]^2) - 1) *
         exp(2*fit_sc_logn$estimate["meanlog"] + fit_sc_logn$estimate["sdlog"]^2)),
    sqrt(unname(fit_sc_gamma$estimate["shape"]) / (unname(fit_sc_gamma$estimate["rate"])^2))))

# Flinders Street
fl <- pedestrian_df$flinders_street
fit_fl_norm  <- fitdistr(fl, "normal")
fit_fl_logn  <- fitdistr(fl, "lognormal")
fit_fl_gamma <- fitdistr(fl, "gamma")

fl_models <- tibble(
  crossing = "flinders_street",
  model    = c("normal","lognormal","gamma"),
  logLik   = c(logLik(fit_fl_norm)[1],  logLik(fit_fl_logn)[1],  logLik(fit_fl_gamma)[1]),
  AIC      = c(AIC(fit_fl_norm),        AIC(fit_fl_logn),        AIC(fit_fl_gamma)),

  mean_est = c(
    unname(fit_fl_norm$estimate["mean"]),
    exp(fit_fl_logn$estimate["meanlog"] + 0.5*fit_fl_logn$estimate["sdlog"]^2),
    unname(fit_fl_gamma$estimate["shape"] / fit_fl_gamma$estimate["rate"])),
  
  sd_est   = c(
    unname(fit_fl_norm$estimate["sd"]),
    sqrt((exp(fit_fl_logn$estimate["sdlog"]^2) - 1) *
         exp(2*fit_fl_logn$estimate["meanlog"] + fit_fl_logn$estimate["sdlog"]^2)),
    sqrt(unname(fit_fl_gamma$estimate["shape"]) / (unname(fit_fl_gamma$estimate["rate"])^2))))

# QV Melbourne
qv <- pedestrian_df$qv_melbourne
fit_qv_norm  <- fitdistr(qv, "normal")
fit_qv_logn  <- fitdistr(qv, "lognormal")
fit_qv_gamma <- fitdistr(qv, "gamma")

qv_models <- tibble(
  crossing = "qv_melbourne",
  model    = c("normal","lognormal","gamma"),
  logLik   = c(logLik(fit_qv_norm)[1],  logLik(fit_qv_logn)[1],  logLik(fit_qv_gamma)[1]),
  AIC      = c(AIC(fit_qv_norm),        AIC(fit_qv_logn),        AIC(fit_qv_gamma)),

  mean_est = c(
    unname(fit_qv_norm$estimate["mean"]),
    exp(fit_qv_logn$estimate["meanlog"] + 0.5*fit_qv_logn$estimate["sdlog"]^2),
    unname(fit_qv_gamma$estimate["shape"] / fit_qv_gamma$estimate["rate"])),
  
  sd_est   = c(
    unname(fit_qv_norm$estimate["sd"]),
    sqrt((exp(fit_qv_logn$estimate["sdlog"]^2) - 1) *
         exp(2*fit_qv_logn$estimate["meanlog"] + fit_qv_logn$estimate["sdlog"]^2)),
    sqrt(unname(fit_qv_gamma$estimate["shape"]) / (unname(fit_qv_gamma$estimate["rate"])^2))))

mle_fits <- bind_rows(sc_models, fl_models, qv_models) |>
  arrange(crossing, AIC)

mle_fits
```

```{r}
par(mfrow = c(1,3), mar = c(4,4,2,1))

## Southern Cross 
x <- sort(sc); n <- length(x); p <- (seq_len(n)-0.5)/n
qN <- qnorm(p,  mean = fit_sc_norm$estimate["mean"],    sd    = fit_sc_norm$estimate["sd"])
qL <- qlnorm(p, meanlog = fit_sc_logn$estimate["meanlog"], sdlog = fit_sc_logn$estimate["sdlog"])
qG <- qgamma(p, shape = fit_sc_gamma$estimate["shape"], rate = fit_sc_gamma$estimate["rate"])
plot(qN, x, xlab="Theoretical quantiles", ylab="Empirical quantiles", main="Southern Cross",
     pch=1, col="red"); points(qL, x, pch=1, col="forestgreen"); points(qG, x, pch=1, col="blue"); abline(0,1)

# Flinders Street
x <- sort(fl); n <- length(x); p <- (seq_len(n)-0.5)/n
qN <- qnorm(p,  mean = fit_fl_norm$estimate["mean"],    sd    = fit_fl_norm$estimate["sd"])
qL <- qlnorm(p, meanlog = fit_fl_logn$estimate["meanlog"], sdlog = fit_fl_logn$estimate["sdlog"])
qG <- qgamma(p, shape = fit_fl_gamma$estimate["shape"], rate = fit_fl_gamma$estimate["rate"])
plot(qN, x, xlab="Theoretical quantiles", ylab="Empirical quantiles", main="Flinders Street",
     pch=1, col="red"); points(qL, x, pch=1, col="forestgreen"); points(qG, x, pch=1, col="blue"); abline(0,1)

# QV Melbourne 
x <- sort(qv); n <- length(x); p <- (seq_len(n)-0.5)/n
qN <- qnorm(p,  mean = fit_qv_norm$estimate["mean"],    sd    = fit_qv_norm$estimate["sd"])
qL <- qlnorm(p, meanlog = fit_qv_logn$estimate["meanlog"], sdlog = fit_qv_logn$estimate["sdlog"])
qG <- qgamma(p, shape = fit_qv_gamma$estimate["shape"], rate = fit_qv_gamma$estimate["rate"])
plot(qN, x, xlab="Theoretical quantiles", ylab="Empirical quantiles", main="QV Melbourne",
     pch=1, col="red"); points(qL, x, pch=1, col="forestgreen"); points(qG, x, pch=1, col="blue"); abline(0,1)

par(mfrow = c(1,1))

```


## task 2

### appraoch 1

```{r}
pedestrian_long %>%
  group_by(crossing) %>%
  summarise(q90 = quantile(count, 0.9))

```

```{r}

# function to calculate 90th percentile
q90_fn <- function(data, i) quantile(data[i], 0.9)

# example for Flinders
fl_boot <- boot(pedestrian_df$flinders_street, q90_fn, R = 1000)
ci_fl <- boot.ci(fl_boot, type = "perc")
round(ci_fl$percent[4:5], 2)

# Southern Cross
sc_boot <- boot(pedestrian_df$southern_cross, q90_fn, R = 1000)
ci_sc <- boot.ci(sc_boot, type = "perc")
round(ci_sc$percent[4:5], 2)


# QV
qv_boot <- boot(pedestrian_df$qv, q90_fn, R = 1000)
ci_qv <- boot.ci(qv_boot, type = "perc")
round(ci_qv$percent[4:5], 2)


```


