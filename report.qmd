---
title: "ETC5242 Assignment 2"
author: "Jyovika Aswale, Siddhi Jadhav, Sia Chawla"
format: html
editor: visual
---

```{r, message=FALSE}
library(tidyverse)
```

```{r}
#| label: task1
#| echo: true
#| message: false
#| warning: false
#| fig-cap: "Descriptive summaries, density plots, and fitted distributions for pedestrian counts."

# Load packages
library(tidyverse)
library(fitdistrplus)
library(gridExtra)
library(scales)

# Read the dataset
pedestrian_df <- read_csv("data/pedestrians.csv")

# Descriptive summary table
desc_table <- pedestrian_df |>
  summarise(
    Southern_Cross_Mean   = mean(southern_cross),
    Southern_Cross_SD     = sd(southern_cross),
    Southern_Cross_Min    = min(southern_cross),
    Southern_Cross_Max    = max(southern_cross),
    Southern_Cross_Median = median(southern_cross),
    Southern_Cross_IQR    = paste0(quantile(southern_cross, 0.25), " – ", quantile(southern_cross, 0.75)),

    Flinders_Street_Mean   = mean(flinders_street),
    Flinders_Street_SD     = sd(flinders_street),
    Flinders_Street_Min    = min(flinders_street),
    Flinders_Street_Max    = max(flinders_street),
    Flinders_Street_Median = median(flinders_street),
    Flinders_Street_IQR    = paste0(quantile(flinders_street, 0.25), " – ", quantile(flinders_street, 0.75)),

    QV_Melbourne_Mean   = mean(qv_melbourne),
    QV_Melbourne_SD     = sd(qv_melbourne),
    QV_Melbourne_Min    = min(qv_melbourne),
    QV_Melbourne_Max    = max(qv_melbourne),
    QV_Melbourne_Median = median(qv_melbourne),
    QV_Melbourne_IQR    = paste0(quantile(qv_melbourne, 0.25), " – ", quantile(qv_melbourne, 0.75))
  )

desc_table_tidy <- tibble(
  Statistic = c("Mean", "Standard Deviation", "Minimum", "Maximum", "Median (50%)", "IQR (25–75%)"),
  `Southern Cross` = c(
    round(desc_table$Southern_Cross_Mean, 1),
    round(desc_table$Southern_Cross_SD, 1),
    desc_table$Southern_Cross_Min,
    desc_table$Southern_Cross_Max,
    desc_table$Southern_Cross_Median,
    desc_table$Southern_Cross_IQR
  ),
  `Flinders Street` = c(
    round(desc_table$Flinders_Street_Mean, 1),
    round(desc_table$Flinders_Street_SD, 1),
    desc_table$Flinders_Street_Min,
    desc_table$Flinders_Street_Max,
    desc_table$Flinders_Street_Median,
    desc_table$Flinders_Street_IQR
  ),
  `QV Melbourne` = c(
    round(desc_table$QV_Melbourne_Mean, 1),
    round(desc_table$QV_Melbourne_SD, 1),
    desc_table$QV_Melbourne_Min,
    desc_table$QV_Melbourne_Max,
    desc_table$QV_Melbourne_Median,
    desc_table$QV_Melbourne_IQR
  )
)

knitr::kable(desc_table_tidy,
  caption = "Descriptive summary of pedestrian counts at three Melbourne sites."
)

# Density plots for each site
ped_long <- pedestrian_df |>
  pivot_longer(cols = everything(),
               names_to = "Site", values_to = "Count") |>
  mutate(Site = recode(Site,
                       "southern_cross" = "Southern Cross",
                       "flinders_street" = "Flinders Street",
                       "qv_melbourne" = "QV Melbourne"))

# Combined density plot
ggplot(ped_long, aes(x = Count, fill = Site)) +
  geom_density(alpha = 0.7, color = "black") +
  facet_wrap(~ Site, ncol = 3, scales = "fixed") +
  scale_fill_manual(values = c("#69b3a2", "#ffb347", "#a17fe0")) +
  labs(x = "Pedestrian count", y = "Density",
       title = "Pedestrian count distributions with shared axes") +
  theme_minimal(base_size = 13) +
  theme(legend.position = "none")


# Fit Normal, Lognormal and Gamma models (MLE)
fit_norm_s  <- fitdist(pedestrian_df$southern_cross,  "norm")
fit_logn_s  <- fitdist(pedestrian_df$southern_cross,  "lnorm")
fit_gamma_s <- fitdist(pedestrian_df$southern_cross,  "gamma")

fit_norm_f  <- fitdist(pedestrian_df$flinders_street, "norm")
fit_logn_f  <- fitdist(pedestrian_df$flinders_street, "lnorm")
fit_gamma_f <- fitdist(pedestrian_df$flinders_street, "gamma")

fit_norm_qv  <- fitdist(pedestrian_df$qv_melbourne,  "norm")
fit_logn_qv  <- fitdist(pedestrian_df$qv_melbourne,  "lnorm")
fit_gamma_qv <- fitdist(pedestrian_df$qv_melbourne,  "gamma")

# Compare fitted models visually
par(mfrow = c(1,3))
plot.legend <- c("Normal", "Lognormal", "Gamma")

denscomp(list(fit_norm_s, fit_logn_s, fit_gamma_s),
         legendtext = plot.legend, main = "Southern Cross")
denscomp(list(fit_norm_f, fit_logn_f, fit_gamma_f),
         legendtext = plot.legend, main = "Flinders Street")
denscomp(list(fit_norm_qv, fit_logn_qv, fit_gamma_qv),
         legendtext = plot.legend, main = "QV Melbourne")

# QQ plots for goodness of fit
par(mfrow = c(1,3))
qqcomp(list(fit_norm_s, fit_logn_s, fit_gamma_s),
       legendtext = plot.legend, main = "Southern Cross")
qqcomp(list(fit_norm_f, fit_logn_f, fit_gamma_f),
       legendtext = plot.legend, main = "Flinders Street")
qqcomp(list(fit_norm_qv, fit_logn_qv, fit_gamma_qv),
       legendtext = plot.legend, main = "QV Melbourne")

```
## task 2

```{r}
#| label: task2-approach1
#| echo: true
#| message: false
#| warning: false
#| fig-cap: "Empirical 90th percentiles with 95% bootstrap confidence intervals for each site."
library(tidyverse)



#bootstrap 90th percentile
boot_q90 <- function(x, p = 0.9, B = 5000) {
  q_hat <- quantile(x, probs = p, type = 7)
  boots <- replicate(B, quantile(sample(x, replace = TRUE), probs = p, type = 7))
  ci <- quantile(boots, c(0.025, 0.975))
  tibble(q90 = as.numeric(q_hat),
         lower = as.numeric(ci[1]),
         upper = as.numeric(ci[2]))
}

# compute for all three sites
q90_results <- tibble(
  Site = c("Southern Cross", "Flinders Street", "QV Melbourne")
) |>
  bind_cols(bind_rows(
    boot_q90(pedestrian_df$southern_cross, 0.9, B),
    boot_q90(pedestrian_df$flinders_street, 0.9, B),
    boot_q90(pedestrian_df$qv_melbourne, 0.9, B)
  ))

# display table
knitr::kable(q90_results, digits = 1,
  caption = "Task 2 (Approach 1): Empirical 90th percentiles and 95% bootstrap confidence intervals.")

```

